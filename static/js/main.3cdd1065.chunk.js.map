{"version":3,"sources":["redux/actions/modeActions.js","redux/actions/actionTypes.js","components/common/Header.js","api/apiUtils.js","api/leagueOfLegendsApi.js","redux/actions/searchActions.js","components/form/SearchForm.js","components/common/Summoner.js","components/common/MatchHistory.js","components/results/LeagueOfLegendsResults.js","components/results/TeamFightTacticsResults.js","components/results/ValorantResults.js","components/App.js","redux/reducers/initialState.js","modes.js","redux/reducers/index.js","redux/reducers/modeReducer.js","redux/reducers/searchReducer.js","index.js","redux/configureStore.js"],"names":["changeMode","mode","type","connect","state","dispatch","actions","bindActionCreators","modeActions","props","Tabs","value","onChange","event","newValue","indicatorColor","textColor","centered","Tab","label","component","Link","to","handleResponse","response","a","ok","json","status","text","error","Error","console","log","handleError","baseUrl","updateSearch","searchField","isFetchingSummoner","isFetchingMatchHistory","summonerFound","summoner","summonerNotFound","setMatchHistory","matches","getMatchHistory","accountId","url","fetch","then","catch","leagueOfLegendsApi","matchHistory","performSearch","name","id","useStyles","makeStyles","searchContainer","maxWidth","padding","display","searchButton","marginLeft","search","input","searchActions","classes","onSubmit","preventDefault","Container","root","disableGutters","TextField","autoFocus","fullWidth","target","Button","size","theme","summonerContainer","Summoner","avatar_url","profileIconId","Paper","CircularProgress","Typography","style","alignItems","Avatar","src","variant","summonerLevel","notFoundContainer","MatchHistory","useState","champAssets","setChampAssets","getChampName","key","find","champ","parseInt","useEffect","data","Object","values","length","TableContainer","Table","aria-label","TableHead","TableRow","TableCell","TableBody","map","row","champName","champion","imgSrc","getChampIcon","gameId","width","alt","lane","platformId","role","season","timestamp","date","Date","getHours","getMinutes","getSeconds","getMonth","getDate","getFullYear","getTime","Grid","container","spacing","item","xs","undefined","rootContainer","textAlign","App","CssBaseline","exact","path","LeagueOfLegendsResults","TeamFightTacticsResults","ValorantResults","rootReducer","combineReducers","initialState","action","store","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","reduxImmutableStateInvariant","configureStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3cdd1065.chunk.js","sourcesContent":["import * as types from \"./actionTypes\";\r\n\r\nexport function changeMode(mode) {\r\n  return { type: types.CHANGE_MODE, mode };\r\n}\r\n","export const CHANGE_MODE = \"CHANGE_MODE\";\r\nexport const UPDATE_SEARCH_FIELD = \"UPDATE_SEARCH_FIELD\";\r\nexport const SUMMONER_FOUND = \"SUMMONER_FOUND\";\r\nexport const SUMMONER_NOT_FOUND = \"SUMMONER_NOT_FOUND\";\r\nexport const SET_MATCH_HISTORY = \"SET_MATCH_HISTORY\";\r\nexport const IS_FETCHING_SUMMONER = \"IS_FETCHING_SUMMONER\";\r\nexport const IS_FETCHING_MATCH_HISTORY = \"IS_FETCHING_MATCH_HISTORY\";\r\n","import React from \"react\";\r\nimport { Tab, Tabs } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport * as modeActions from \"../../redux/actions/modeActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { bindActionCreators } from \"redux\";\r\n\r\nfunction Header(props) {\r\n  function handleChange(event, newValue) {\r\n    props.actions.changeMode(newValue);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Tabs\r\n        value={props.mode}\r\n        onChange={handleChange}\r\n        indicatorColor=\"primary\"\r\n        textColor=\"primary\"\r\n        centered\r\n      >\r\n        <Tab\r\n          label=\"League of Legends\"\r\n          component={Link}\r\n          to=\"/riot-stats/league-of-legends\"\r\n        />\r\n        <Tab\r\n          label=\"Team Fight Tactics\"\r\n          component={Link}\r\n          to=\"/riot-stats/team-fight-tactics\"\r\n        />\r\n        <Tab label=\"Valorant\" component={Link} to=\"/riot-stats/valorant\" />\r\n      </Tabs>\r\n    </>\r\n  );\r\n}\r\n\r\nHeader.propTypes = {\r\n  mode: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    mode: state.mode,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    actions: bindActionCreators(modeActions, dispatch),\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\r\n","export async function handleResponse(response) {\r\n  if (response.ok) return response.json();\r\n  if (response.status === 400) {\r\n    // So, a server-side validation error occurred.\r\n    // Server side validation returns a string error message, so parse as text instead of json.\r\n    const error = await response.text();\r\n    throw new Error(error);\r\n  }\r\n  if (response.status === 404) {\r\n    // Status is 404 if data is not found\r\n    return response.json();\r\n  }\r\n  // throw new Error(\"Network response was not ok.\");\r\n  console.log(\"Network response was not ok.\");\r\n}\r\n\r\n// In a real app, would likely call an error logging service.\r\nexport function handleError(error) {\r\n  // eslint-disable-next-line no-console\r\n  console.error(\"API call failed. \" + error);\r\n  throw error;\r\n}\r\n","import { handleError, handleResponse } from \"./apiUtils\";\r\nconst baseUrl =\r\n  \"https://un4nmfv2nk.execute-api.us-west-2.amazonaws.com/development\";\r\n\r\nexport function getSummonerByName(name) {\r\n  const url = `${baseUrl}/summoner?region=na1&name=${name}`;\r\n  return fetch(url).then(handleResponse).catch(handleError);\r\n}\r\n\r\nexport function getMatchHistory(accountId) {\r\n  const url = `${baseUrl}/match-history?region=na1&endIndex=15&accountId=${accountId}`;\r\n  return fetch(url).then(handleResponse).catch(handleError);\r\n}\r\n","import * as types from \"./actionTypes\";\r\nimport * as leagueOfLegendsApi from \"../../api/leagueOfLegendsApi\";\r\n\r\nexport function updateSearch(searchField) {\r\n  return { type: types.UPDATE_SEARCH_FIELD, searchField };\r\n}\r\n\r\nexport function isFetchingSummoner() {\r\n  return { type: types.IS_FETCHING_SUMMONER };\r\n}\r\n\r\nexport function isFetchingMatchHistory() {\r\n  return { type: types.IS_FETCHING_MATCH_HISTORY };\r\n}\r\n\r\nexport function summonerFound(summoner) {\r\n  return { type: types.SUMMONER_FOUND, summoner };\r\n}\r\n\r\nexport function summonerNotFound() {\r\n  return { type: types.SUMMONER_NOT_FOUND };\r\n}\r\n\r\nexport function setMatchHistory(matches) {\r\n  return { type: types.SET_MATCH_HISTORY, matches };\r\n}\r\n\r\nexport function getMatchHistory(accountId) {\r\n  return function (dispatch) {\r\n    dispatch(isFetchingMatchHistory());\r\n    return leagueOfLegendsApi\r\n      .getMatchHistory(accountId)\r\n      .then((matchHistory) => {\r\n        let matches = [];\r\n        if (matchHistory.matches) {\r\n          matches = matchHistory.matches;\r\n        }\r\n        dispatch(setMatchHistory(matches));\r\n      })\r\n      .catch((error) => {\r\n        throw error;\r\n      });\r\n  };\r\n}\r\n\r\nexport function performSearch(searchField) {\r\n  return function (dispatch) {\r\n    dispatch(isFetchingSummoner());\r\n    return leagueOfLegendsApi\r\n      .getSummonerByName(searchField)\r\n      .then((summoner) => {\r\n        if (summoner.id) {\r\n          dispatch(summonerFound(summoner));\r\n          dispatch(getMatchHistory(summoner.accountId));\r\n        } else {\r\n          dispatch(summonerNotFound());\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        throw error;\r\n      });\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { TextField, Container, Button } from \"@material-ui/core\";\r\nimport * as searchActions from \"../../redux/actions/searchActions\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst useStyles = makeStyles({\r\n  searchContainer: {\r\n    maxWidth: \"350px\",\r\n    padding: \"20px\",\r\n    display: \"inline-flex\",\r\n  },\r\n  searchButton: {\r\n    marginLeft: \"15px\",\r\n  },\r\n});\r\n\r\nfunction SearchForm(props) {\r\n  const classes = useStyles();\r\n\r\n  function handleChange(event) {\r\n    const { value } = event.target;\r\n    props.actions.updateSearch(value);\r\n  }\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    props.actions.performSearch(props.search);\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <Container classes={{ root: classes.searchContainer }} disableGutters>\r\n        <TextField\r\n          id=\"summoner-search\"\r\n          label=\"Find summoner\"\r\n          autoFocus={true}\r\n          fullWidth={true}\r\n          value={props.search}\r\n          onChange={handleChange}\r\n        />\r\n        <Button\r\n          classes={{ root: classes.searchButton }}\r\n          type=\"submit\"\r\n          size=\"small\"\r\n        >\r\n          Find\r\n        </Button>\r\n      </Container>\r\n    </form>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    search: state.search.input,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    actions: bindActionCreators(searchActions, dispatch),\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchForm);\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Paper, Avatar, Typography, CircularProgress } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  summonerContainer: {\r\n    padding: \"20px\",\r\n  },\r\n}));\r\n\r\nfunction Summoner(props) {\r\n  const avatar_url = `https://ddragon.leagueoflegends.com/cdn/6.3.1/img/profileicon/${props.summoner.profileIconId}.png`;\r\n  const classes = useStyles();\r\n  if (props.isFetchingSummoner) {\r\n    return (\r\n      <Paper classes={{ root: classes.summonerContainer }}>\r\n        <CircularProgress />\r\n      </Paper>\r\n    );\r\n  }\r\n  return (\r\n    <Paper classes={{ root: classes.summonerContainer }}>\r\n      <Typography\r\n        component=\"div\"\r\n        style={{ display: \"flex\", alignItems: \"center\" }}\r\n      >\r\n        <Avatar src={avatar_url} />\r\n        <Typography variant=\"subtitle1\" style={{ marginLeft: \"10px\" }}>\r\n          {props.summoner.name}\r\n        </Typography>\r\n      </Typography>\r\n      Level: {props.summoner.summonerLevel}\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default Summoner;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Table,\r\n  TableContainer,\r\n  Paper,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\n\r\nconst useStyles = makeStyles({\r\n  notFoundContainer: {\r\n    padding: \"20px\",\r\n  },\r\n});\r\nfunction MatchHistory(props) {\r\n  const classes = useStyles();\r\n  const [champAssets, setChampAssets] = useState({});\r\n  useEffect(() => {\r\n    fetch(\r\n      \"http://ddragon.leagueoflegends.com/cdn/10.11.1/data/en_US/champion.json\"\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => setChampAssets(Object.values(data.data)));\r\n  }, []);\r\n  function getChampIcon(key) {\r\n    const name = getChampName(key);\r\n    return `http://ddragon.leagueoflegends.com/cdn/10.11.1/img/champion/${name}.png`;\r\n  }\r\n  function getChampName(key) {\r\n    const champ = champAssets.find((champ) => parseInt(champ.key) === key);\r\n    return champ.name;\r\n  }\r\n  function getTime(timestamp) {\r\n    const date = new Date(timestamp);\r\n    return `${date.getHours()}:${date.getMinutes()}:${date.getSeconds()} ${\r\n      date.getMonth() + 1\r\n    }/${date.getDate()}/${date.getFullYear()}`;\r\n  }\r\n  if (props.isFetchingMatchHistory) {\r\n    return (\r\n      <Paper classes={{ root: classes.notFoundContainer }}>\r\n        <CircularProgress />\r\n      </Paper>\r\n    );\r\n  }\r\n  if (props.summonerFound && props.matches.length === 0) {\r\n    return (\r\n      <Paper classes={{ root: classes.notFoundContainer }}>\r\n        It appears this summoner has not played any recent games...\r\n      </Paper>\r\n    );\r\n  }\r\n  if (props.matches.length === 0) {\r\n    return <></>;\r\n  }\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Champion</TableCell>\r\n            <TableCell>Lane</TableCell>\r\n            <TableCell>Region</TableCell>\r\n            <TableCell>Role</TableCell>\r\n            <TableCell>Season</TableCell>\r\n            <TableCell>Timestamp</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {props.matches.map((row) => {\r\n            const champName = getChampName(row.champion);\r\n            const imgSrc = getChampIcon(row.champion);\r\n            return (\r\n              <TableRow key={row.gameId}>\r\n                <TableCell>\r\n                  <img width=\"30px\" src={imgSrc} alt={champName} />\r\n                  {champName}\r\n                </TableCell>\r\n                <TableCell>{row.lane}</TableCell>\r\n                <TableCell>{row.platformId}</TableCell>\r\n                <TableCell>{row.role}</TableCell>\r\n                <TableCell>{row.season}</TableCell>\r\n                <TableCell>{getTime(row.timestamp)}</TableCell>\r\n              </TableRow>\r\n            );\r\n          })}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n\r\nexport default MatchHistory;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Summoner from \"../common/Summoner\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport MatchHistory from \"../common/MatchHistory\";\r\n\r\nfunction LeagueOfLegendsResults(props) {\r\n  if (!props.summoner.id) {\r\n    return <></>;\r\n  }\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={3}>\r\n        <Summoner\r\n          summoner={props.summoner}\r\n          isFetchingSummoner={props.isFetchingSummoner}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={9}>\r\n        <MatchHistory\r\n          matches={props.matches}\r\n          summonerFound={props.summoner.id !== undefined}\r\n          isFetchingMatchHistory={props.isFetchingMatchHistory}\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    isFetchingSummoner: state.search.isFetchingSummoner,\r\n    isFetchingMatchHistory: state.search.isFetchingMatchHistory,\r\n    summoner: state.search.summoner,\r\n    matches: state.search.matches,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(LeagueOfLegendsResults);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction TeamFightTacticsResults(props) {\r\n  if (!props.summoner.id) {\r\n    return <></>;\r\n  }\r\n  return <></>;\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    summoner: state.search.summoner,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(TeamFightTacticsResults);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction ValorantResults(props) {\r\n  if (!props.summoner.id) {\r\n    return <></>;\r\n  }\r\n  return <></>;\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    summoner: state.search.summoner,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(ValorantResults);\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Container, CssBaseline } from \"@material-ui/core\";\r\nimport Header from \"./common/Header\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport SearchForm from \"./form/SearchForm\";\r\nimport LeagueOfLegendsResults from \"./results/LeagueOfLegendsResults\";\r\nimport TeamFightTacticsResults from \"./results/TeamFightTacticsResults\";\r\nimport ValorantResults from \"./results/ValorantResults\";\r\n\r\nconst useStyles = makeStyles({\r\n  rootContainer: {\r\n    textAlign: \"center\",\r\n  },\r\n});\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n  return (\r\n    <CssBaseline>\r\n      <Container classes={{ root: classes.rootContainer }}>\r\n        <Header />\r\n        <SearchForm />\r\n        <Switch>\r\n          <Route exact path=\"/riot-stats/\" component={LeagueOfLegendsResults} />\r\n          <Route\r\n            exact\r\n            path=\"/riot-stats/league-of-legends\"\r\n            component={LeagueOfLegendsResults}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/riot-stats/team-fight-tactics\"\r\n            component={TeamFightTacticsResults}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/riot-stats/valorant\"\r\n            component={ValorantResults}\r\n          />\r\n        </Switch>\r\n      </Container>\r\n    </CssBaseline>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import modes from \"../../modes\";\r\n\r\nexport default {\r\n  mode: modes.LEAGUE_OF_LEGENDS,\r\n  search: {\r\n    input: \"\",\r\n    summoner: {},\r\n    matches: [],\r\n    isFetchingSummoner: false,\r\n    isFetchingMatchHistory: false,\r\n  },\r\n};\r\n","export default {\r\n  LEAGUE_OF_LEGENDS: 0,\r\n  TEAM_FIGHT_TACTICS: 1,\r\n  VALORANT: 2,\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport mode from \"./modeReducer\";\r\nimport search from \"./searchReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  mode,\r\n  search,\r\n});\r\n\r\nexport default rootReducer;\r\n","import * as types from \"../actions/actionTypes\";\r\nimport initialState from \"./initialState\";\r\n\r\nexport default function modeReducer(state = initialState.mode, action) {\r\n  switch (action.type) {\r\n    case types.CHANGE_MODE:\r\n      return action.mode;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import * as types from \"../actions/actionTypes\";\r\nimport initialState from \"./initialState\";\r\n\r\nexport default function searchReducer(state = initialState.search, action) {\r\n  switch (action.type) {\r\n    case types.UPDATE_SEARCH_FIELD:\r\n      return { ...state, input: action.searchField };\r\n    case types.SUMMONER_FOUND:\r\n      return {\r\n        ...state,\r\n        summoner: { ...action.summoner },\r\n        isFetchingSummoner: false,\r\n      };\r\n    case types.SUMMONER_NOT_FOUND:\r\n      return { ...state, summoner: {}, isFetchingSummoner: false };\r\n    case types.SET_MATCH_HISTORY:\r\n      return {\r\n        ...state,\r\n        matches: [...action.matches],\r\n        isFetchingMatchHistory: false,\r\n      };\r\n    case types.IS_FETCHING_SUMMONER:\r\n      return { ...state, isFetchingSummoner: true };\r\n    case types.IS_FETCHING_MATCH_HISTORY:\r\n      return { ...state, isFetchingMatchHistory: true };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport App from \"./components/App\";\r\nimport configureStore from \"./redux/configureStore\";\r\nimport { Provider as ReduxProvider } from \"react-redux\";\r\n\r\nconst store = configureStore();\r\n\r\nReactDOM.render(\r\n  <ReduxProvider store={store}>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </ReduxProvider>,\r\n  document.getElementById(\"app\")\r\n);\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\nimport reduxImmutableStateInvariant from \"redux-immutable-state-invariant\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nexport default function configureStore(initialState) {\r\n  const composeEnhancers =\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; // add support for Redux dev tools\r\n\r\n  return createStore(\r\n    rootReducer,\r\n    initialState,\r\n    composeEnhancers(applyMiddleware(thunk, reduxImmutableStateInvariant()))\r\n  );\r\n}\r\n"],"sourceRoot":""}