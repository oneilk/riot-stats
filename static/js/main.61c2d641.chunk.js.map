{"version":3,"sources":["redux/actions/modeActions.js","redux/actions/actionTypes.js","components/common/Header.js","api/apiUtils.js","api/leagueOfLegendsApi.js","redux/actions/searchActions.js","components/form/SearchForm.js","components/common/Summoner.js","components/common/MatchHistory.js","components/results/LeagueOfLegendsResults.js","components/results/TeamFightTacticsResults.js","components/results/ValorantResults.js","components/App.js","redux/reducers/initialState.js","modes.js","redux/reducers/index.js","redux/reducers/modeReducer.js","redux/reducers/searchReducer.js","index.js","redux/configureStore.js"],"names":["changeMode","mode","type","connect","state","dispatch","actions","bindActionCreators","modeActions","props","Tabs","value","onChange","event","newValue","indicatorColor","textColor","centered","Tab","label","component","Link","to","handleResponse","response","a","ok","json","status","text","error","Error","handleError","console","baseUrl","updateSearch","searchField","summonerFound","summoner","summonerNotFound","setMatchHistory","matchHistory","getMatchHistory","accountId","url","fetch","then","catch","leagueOfLegendsApi","performSearch","name","id","useStyles","makeStyles","searchContainer","maxWidth","padding","display","searchButton","marginLeft","search","input","searchActions","classes","onSubmit","preventDefault","Container","root","disableGutters","TextField","autoFocus","fullWidth","target","Button","size","theme","summonerContainer","Summoner","avatar_url","profileIconId","Paper","Typography","style","alignItems","Avatar","src","variant","summonerLevel","matches","log","TableContainer","Table","aria-label","TableHead","TableRow","TableCell","TableBody","length","map","row","key","gameId","champion","lane","platformId","role","season","timestamp","Grid","container","spacing","item","xs","TeamFightTacticsResults","ValorantResults","rootContainer","textAlign","App","CssBaseline","exact","path","LeagueOfLegendsResults","rootReducer","combineReducers","initialState","action","store","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","reduxImmutableStateInvariant","configureStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.61c2d641.chunk.js","sourcesContent":["import * as types from \"./actionTypes\";\r\n\r\nexport function changeMode(mode) {\r\n  return { type: types.CHANGE_MODE, mode };\r\n}\r\n","export const CHANGE_MODE = \"CHANGE_MODE\";\r\nexport const UPDATE_SEARCH_FIELD = \"UPDATE_SEARCH_FIELD\";\r\nexport const SUMMONER_FOUND = \"SUMMONER_FOUND\";\r\nexport const SUMMONER_NOT_FOUND = \"SUMMONER_NOT_FOUND\";\r\nexport const SET_MATCH_HISTORY = \"SET_MATCH_HISTORY\";\r\n","import React from \"react\";\r\nimport { Tab, Tabs } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport * as modeActions from \"../../redux/actions/modeActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { bindActionCreators } from \"redux\";\r\n\r\nfunction Header(props) {\r\n  function handleChange(event, newValue) {\r\n    props.actions.changeMode(newValue);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Tabs\r\n        value={props.mode}\r\n        onChange={handleChange}\r\n        indicatorColor=\"primary\"\r\n        textColor=\"primary\"\r\n        centered\r\n      >\r\n        <Tab\r\n          label=\"League of Legends\"\r\n          component={Link}\r\n          to=\"/riot-stats/league-of-legends\"\r\n        />\r\n        <Tab\r\n          label=\"Team Fight Tactics\"\r\n          component={Link}\r\n          to=\"/riot-stats/team-fight-tactics\"\r\n        />\r\n        <Tab label=\"Valorant\" component={Link} to=\"/riot-stats/valorant\" />\r\n      </Tabs>\r\n    </>\r\n  );\r\n}\r\n\r\nHeader.propTypes = {\r\n  mode: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    mode: state.mode,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    actions: bindActionCreators(modeActions, dispatch),\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\r\n","export async function handleResponse(response) {\r\n  if (response.ok) return response.json();\r\n  if (response.status === 400) {\r\n    // So, a server-side validation error occurred.\r\n    // Server side validation returns a string error message, so parse as text instead of json.\r\n    const error = await response.text();\r\n    throw new Error(error);\r\n  }\r\n  throw new Error(\"Network response was not ok.\");\r\n}\r\n\r\n// In a real app, would likely call an error logging service.\r\nexport function handleError(error) {\r\n  // eslint-disable-next-line no-console\r\n  console.error(\"API call failed. \" + error);\r\n  throw error;\r\n}\r\n","import { handleError, handleResponse } from \"./apiUtils\";\r\nconst baseUrl =\r\n  \"https://un4nmfv2nk.execute-api.us-west-2.amazonaws.com/development\";\r\n\r\nexport function getSummonerByName(name) {\r\n  const url = `${baseUrl}/summoner?region=na1&name=${name}`;\r\n  return fetch(url)\r\n    .then((response) => {\r\n      if (response.ok) return response.json();\r\n      if (response.status === 404) {\r\n        // Status is 404 if summoner is not found\r\n        return response.json();\r\n      }\r\n      throw new Error(\"Network response was not ok.\");\r\n    })\r\n    .catch(handleError);\r\n}\r\n\r\nexport function getMatchHistory(accountId) {\r\n  const url = `${baseUrl}/match-history?region=na1&endIndex=15&accountId=${accountId}`;\r\n  return fetch(url).then(handleResponse).catch(handleError);\r\n}\r\n","import * as types from \"./actionTypes\";\r\nimport * as leagueOfLegendsApi from \"../../api/leagueOfLegendsApi\";\r\n\r\nexport function updateSearch(searchField) {\r\n  return { type: types.UPDATE_SEARCH_FIELD, searchField };\r\n}\r\n\r\nexport function summonerFound(summoner) {\r\n  return { type: types.SUMMONER_FOUND, summoner };\r\n}\r\n\r\nexport function summonerNotFound() {\r\n  return { type: types.SUMMONER_NOT_FOUND };\r\n}\r\n\r\nexport function setMatchHistory(matchHistory) {\r\n  return { type: types.SET_MATCH_HISTORY, matchHistory };\r\n}\r\n\r\nexport function getMatchHistory(accountId) {\r\n  return function (dispatch) {\r\n    return leagueOfLegendsApi\r\n      .getMatchHistory(accountId)\r\n      .then((matchHistory) => {\r\n        dispatch(setMatchHistory(matchHistory));\r\n      })\r\n      .catch((error) => {\r\n        throw error;\r\n      });\r\n  };\r\n}\r\n\r\nexport function performSearch(searchField) {\r\n  return function (dispatch) {\r\n    return leagueOfLegendsApi\r\n      .getSummonerByName(searchField)\r\n      .then((summoner) => {\r\n        if (summoner.id) {\r\n          dispatch(summonerFound(summoner));\r\n          dispatch(getMatchHistory(summoner.accountId));\r\n        } else {\r\n          dispatch(summonerNotFound());\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        throw error;\r\n      });\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { TextField, Container, Button } from \"@material-ui/core\";\r\nimport * as searchActions from \"../../redux/actions/searchActions\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst useStyles = makeStyles({\r\n  searchContainer: {\r\n    maxWidth: \"350px\",\r\n    padding: \"20px\",\r\n    display: \"inline-flex\",\r\n  },\r\n  searchButton: {\r\n    marginLeft: \"15px\",\r\n  },\r\n});\r\n\r\nfunction SearchForm(props) {\r\n  const classes = useStyles();\r\n\r\n  function handleChange(event) {\r\n    const { value } = event.target;\r\n    props.actions.updateSearch(value);\r\n  }\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    props.actions.performSearch(props.search);\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <Container classes={{ root: classes.searchContainer }} disableGutters>\r\n        <TextField\r\n          id=\"summoner-search\"\r\n          label=\"Find summoner\"\r\n          autoFocus={true}\r\n          fullWidth={true}\r\n          value={props.search}\r\n          onChange={handleChange}\r\n        />\r\n        <Button\r\n          classes={{ root: classes.searchButton }}\r\n          type=\"submit\"\r\n          size=\"small\"\r\n        >\r\n          Find\r\n        </Button>\r\n      </Container>\r\n    </form>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    search: state.search.input,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    actions: bindActionCreators(searchActions, dispatch),\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchForm);\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Paper, Avatar, Typography } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  summonerContainer: {\r\n    padding: \"20px\",\r\n  },\r\n}));\r\n\r\nfunction Summoner(props) {\r\n  const avatar_url = `https://ddragon.leagueoflegends.com/cdn/6.3.1/img/profileicon/${props.summoner.profileIconId}.png`;\r\n  const classes = useStyles();\r\n  return (\r\n    <Paper classes={{ root: classes.summonerContainer }}>\r\n      <Typography\r\n        component=\"div\"\r\n        style={{ display: \"flex\", alignItems: \"center\" }}\r\n      >\r\n        <Avatar src={avatar_url} />\r\n        <Typography variant=\"h5\" style={{ marginLeft: \"10px\" }}>\r\n          {props.summoner.name}\r\n        </Typography>\r\n      </Typography>\r\n      Level: {props.summoner.summonerLevel}\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default Summoner;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Table, TableContainer, Paper } from \"@material-ui/core\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\n\r\nfunction MatchHistory(props) {\r\n  console.log(props.matches);\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Champion</TableCell>\r\n            <TableCell>Lane</TableCell>\r\n            <TableCell>Region</TableCell>\r\n            <TableCell>Role</TableCell>\r\n            <TableCell>Season</TableCell>\r\n            <TableCell>Timestamp</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {props.matches.length === 0\r\n            ? \"\"\r\n            : props.matches.map((row) => (\r\n                <TableRow key={row.gameId}>\r\n                  <TableCell>{row.champion}</TableCell>\r\n                  <TableCell>{row.lane}</TableCell>\r\n                  <TableCell>{row.platformId}</TableCell>\r\n                  <TableCell>{row.role}</TableCell>\r\n                  <TableCell>{row.season}</TableCell>\r\n                  <TableCell>{row.timestamp}</TableCell>\r\n                </TableRow>\r\n              ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    matches: state.search.matchHistory.matches,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(MatchHistory);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Summoner from \"../common/Summoner\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport MatchHistory from \"../common/MatchHistory\";\r\n\r\nfunction LeagueOfLegendsResults(props) {\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={3}>\r\n        <Summoner summoner={props.summoner} />\r\n      </Grid>\r\n      <Grid item xs={9}>\r\n        <MatchHistory />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    summoner: state.search.summoner,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(LeagueOfLegendsResults);\r\n","import React from \"react\";\r\n\r\nfunction TeamFightTacticsResults(props) {\r\n  return <>Team Fight Tactics</>;\r\n}\r\n\r\nexport default TeamFightTacticsResults;\r\n","import React from \"react\";\r\n\r\nfunction ValorantResults(props) {\r\n  return <>Valorant</>;\r\n}\r\n\r\nexport default ValorantResults;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Container, CssBaseline } from \"@material-ui/core\";\r\nimport Header from \"./common/Header\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport SearchForm from \"./form/SearchForm\";\r\nimport LeagueOfLegendsResults from \"./results/LeagueOfLegendsResults\";\r\nimport TeamFightTacticsResults from \"./results/TeamFightTacticsResults\";\r\nimport ValorantResults from \"./results/ValorantResults\";\r\n\r\nconst useStyles = makeStyles({\r\n  rootContainer: {\r\n    textAlign: \"center\",\r\n  },\r\n});\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n  return (\r\n    <CssBaseline>\r\n      <Container classes={{ root: classes.rootContainer }}>\r\n        <Header />\r\n        <SearchForm />\r\n        <Switch>\r\n          <Route exact path=\"/riot-stats/\" component={LeagueOfLegendsResults} />\r\n          <Route\r\n            exact\r\n            path=\"/riot-stats/league-of-legends\"\r\n            component={LeagueOfLegendsResults}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/riot-stats/team-fight-tactics\"\r\n            component={TeamFightTacticsResults}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/riot-stats/valorant\"\r\n            component={ValorantResults}\r\n          />\r\n        </Switch>\r\n      </Container>\r\n    </CssBaseline>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import modes from \"../../modes\";\r\n\r\nexport default {\r\n  mode: modes.LEAGUE_OF_LEGENDS,\r\n  search: {\r\n    input: \"\",\r\n    summoner: {},\r\n    matchHistory: {\r\n      matches: [],\r\n    },\r\n  },\r\n};\r\n","export default {\r\n  LEAGUE_OF_LEGENDS: 0,\r\n  TEAM_FIGHT_TACTICS: 1,\r\n  VALORANT: 2,\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport mode from \"./modeReducer\";\r\nimport search from \"./searchReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  mode,\r\n  search,\r\n});\r\n\r\nexport default rootReducer;\r\n","import * as types from \"../actions/actionTypes\";\r\nimport initialState from \"./initialState\";\r\n\r\nexport default function modeReducer(state = initialState.mode, action) {\r\n  switch (action.type) {\r\n    case types.CHANGE_MODE:\r\n      return action.mode;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import * as types from \"../actions/actionTypes\";\r\nimport initialState from \"./initialState\";\r\n\r\nexport default function searchReducer(state = initialState.search, action) {\r\n  switch (action.type) {\r\n    case types.UPDATE_SEARCH_FIELD:\r\n      return { ...state, input: action.searchField };\r\n    case types.SUMMONER_FOUND:\r\n      return { ...state, summoner: { ...action.summoner } };\r\n    case types.SUMMONER_NOT_FOUND:\r\n      return { ...state, summoner: {} };\r\n    case types.SET_MATCH_HISTORY:\r\n      return { ...state, matchHistory: { ...action.matchHistory } };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport App from \"./components/App\";\r\nimport configureStore from \"./redux/configureStore\";\r\nimport { Provider as ReduxProvider } from \"react-redux\";\r\n\r\nconst store = configureStore();\r\n\r\nReactDOM.render(\r\n  <ReduxProvider store={store}>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </ReduxProvider>,\r\n  document.getElementById(\"app\")\r\n);\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\nimport reduxImmutableStateInvariant from \"redux-immutable-state-invariant\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nexport default function configureStore(initialState) {\r\n  const composeEnhancers =\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; // add support for Redux dev tools\r\n\r\n  return createStore(\r\n    rootReducer,\r\n    initialState,\r\n    composeEnhancers(applyMiddleware(thunk, reduxImmutableStateInvariant()))\r\n  );\r\n}\r\n"],"sourceRoot":""}